{
  "compilerOptions": {
    /* Visit https://aka.ms/tsconfig to read more about this file */

    /* Language and Environment */
    // Set the JavaScript language version for emitted JavaScript and include compatible library declarations.
    "target": "es2016",
    // Specify a set of bundled library declaration files that describe the target runtime environment.
    "lib": ["DOM", "ESNext"],

    /* Modules */
    // Specify what module code is generated.
    // "module": "commonjs",
    "module": "ES6",

    // Specify the root folder within your source files.
    "rootDir": "src/scripts",

    // Specify how TypeScript looks up a file from a given module specifier.
    // "moduleResolution": "",

    // /* Specify an output folder for all emitted files. */
    "outDir": "dev",
    // /* Disable emitting comments. */
    "removeComments": true,
    // /* Allow importing helper functions from tslib once per project, instead of including them per-file. */
    "importHelpers": true,
    // Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility.
    "esModuleInterop": true,
    // Ensure that casing is correct in imports.
    "forceConsistentCasingInFileNames": true,
    /* Type Checking */
    // /* Enable all strict type-checking options. */
    "strict": true,
    // /* Enable error reporting for expressions and declarations with an implied 'any' type. */
    "noImplicitAny": true,
    // /* When type checking, take into account 'null' and 'undefined'. */
    "strictNullChecks": true,
    // /* When assigning functions, check to ensure parameters and the return values are subtype-compatible. */
    "strictFunctionTypes": true,
    // /* Check that the arguments for 'bind', 'call', and 'apply' methods match the original function. */
    "strictBindCallApply": true,
    // /* Check for class properties that are declared but not set in the constructor. */
    "strictPropertyInitialization": true,
    // /* Enable error reporting when 'this' is given the type 'any'. */
    "noImplicitThis": true,
    // /* Default catch clause variables as 'unknown' instead of 'any'. */
    "useUnknownInCatchVariables": true,
    // /* Ensure 'use strict' is always emitted. */
    "alwaysStrict": true,
    // /* Enable error reporting when local variables aren't read. */
    "noUnusedLocals": true,
    // /* Raise an error when a function parameter isn't read. */
    "noUnusedParameters": true,
    // /* Enable error reporting for codepaths that do not explicitly return in a function. */
    "noImplicitReturns": true,
    // /* Enable error reporting for fallthrough cases in switch statements. */
    "noFallthroughCasesInSwitch": true,
    "skipLibCheck": true
  }
}
